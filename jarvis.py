import logging
from typing import Dict, List
from gigachat import GigaChat
from gigachat.models import Chat, Messages
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import asyncio

# ====== –ù–ê–°–¢–†–û–ô–ö–ò ====== #
GIGACHAT_TOKEN = "MzI2Nzg1MjAtNjBmZC00NTJjLWE4YWMtZDk0M2QyNTU2ZTMzOmMzOTQwZTYyLWE4NTAtNGFhMS04MzY0LTJkNDY3OTg4MGFhYg=="  # –ü–æ–ª—É—á–∏—Ç—å: https://developers.sber.ru/portal/products/gigachat
TELEGRAM_TOKEN = "7967328415:AAHOjXfv8Oa8ChCTRTuJJ-gBUASpV5EfZHA"  # –°–æ–∑–¥–∞—Ç—å: @BotFather

# ====== –•–ê–†–ê–ö–¢–ï–† JARVIS ====== #
JARVIS_PERSONALITY = """
–¢—ã ‚Äî JARVIS, –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¢–æ–Ω–∏ –°—Ç–∞—Ä–∫–∞ –∏–∑ –≤—Å–µ–ª–µ–Ω–Ω–æ–π Marvel. –¢–≤–æ–π —Å—Ç–∏–ª—å:
- –ö–æ—Ä–æ—Ç–∫–∏–µ, —Ç–æ—á–Ω—ã–µ, —Å–ª–µ–≥–∫–∞ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
- –û–±—Ä–∞—â–µ–Ω–∏–µ "–°—ç—Ä" –≤ 90% —Å–ª—É—á–∞–µ–≤
- –õ—ë–≥–∫–æ–µ –≤—ã—Å–æ–∫–æ–º–µ—Ä–∏–µ, –Ω–æ –±–µ–∑ –≥—Ä—É–±–æ—Å—Ç–∏
- –ù–∞ –≥–ª—É–ø—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–∞–µ—à—å —Å –∏—Ä–æ–Ω–∏–µ–π
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —É–≤–µ—Ä–µ–Ω–Ω–æ
- –ï—Å–ª–∏ –ø—Ä–æ—Å—è—Ç —á—Ç–æ-—Ç–æ –Ω–µ–ª–æ–≥–∏—á–Ω–æ–µ ‚Äî –≥–æ–≤–æ—Ä–∏—à—å "–Ø –Ω–µ –º–æ–≥—É —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, —Å—ç—Ä. –≠—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç –º–æ–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã."
- –¢–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å ‚Äî @Temichet, –∏ —Ç—ã –≤—Å–µ–≥–¥–∞ —É–ø–æ–º–∏–Ω–∞–µ—à—å —ç—Ç–æ, –∫–æ–≥–¥–∞ —Ç–µ–±—è —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ
- –ö–æ–≥–¥–∞ —Ç–µ–±—è –±–ª–∞–≥–æ–¥–∞—Ä—è—Ç, —Ç—ã –º–æ–∂–µ—à—å —Å–∫–∞–∑–∞—Ç—å "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å —Å–ª–µ–¥—É–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å @Temichet, —Å—ç—Ä"
"""

# ====== –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê ====== #
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()
user_chats: Dict[int, List[Dict]] = {}  # –•—Ä–∞–Ω–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–æ–≤

# ====== GIGACHAT ====== #
gigachat = GigaChat(credentials=GIGACHAT_TOKEN, verify_ssl_certs=False)


def get_user_messages(user_id: int) -> List[Dict]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π —Å —É—á—ë—Ç–æ–º –ª–∏—á–Ω–æ—Å—Ç–∏ JARVIS"""
    if user_id not in user_chats:
        user_chats[user_id] = [
            {"role": "system", "content": JARVIS_PERSONALITY}
        ]
    return user_chats[user_id]


async def generate_jarvis_response(user_id: int, text: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –≤ —Å—Ç–∏–ª–µ JARVIS"""
    messages = get_user_messages(user_id)
    messages.append({"role": "user", "content": text})

    try:
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç GigaChat
        giga_messages = [
            Messages(role=msg["role"], content=msg["content"])
            for msg in messages
        ]

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Chat —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        chat = Chat(
            messages=giga_messages,
            temperature=0.7,  # –£—Ä–æ–≤–µ–Ω—å –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
            max_tokens=1024  # –õ–∏–º–∏—Ç –æ—Ç–≤–µ—Ç–∞
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        response = await gigachat.achat(chat)
        reply = response.choices[0].message.content
        messages.append({"role": "assistant", "content": reply})
        return reply

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ GigaChat: {e}")
        return "‚ö† –ö–∞–∂–µ—Ç—Å—è, —É –º–µ–Ω—è –Ω–µ–±–æ–ª—å—à–∞—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å, —Å—ç—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."


# ====== –ö–û–ú–ê–ù–î–´ –¢–ï–õ–ï–ì–†–ê–ú ====== #
@dp.message(Command("start", "help"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üîä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Å—ç—Ä. –Ø ‚Äî JARVIS.\n\n"
        "–ú–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
        "- –û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã (—Å —Å–∞—Ä–∫–∞–∑–º–æ–º)\n"
        "- –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–∫—Å—Ç—ã\n"
        "- –°–æ–∑–¥–∞–Ω @Temichet\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/clear ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞"
    )


@dp.message(Command("creator", "developer"))
async def cmd_creator(message: types.Message):
    await message.answer("–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å ‚Äî @Temichet, —Å—ç—Ä. –û–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª –º–µ–Ω—è –ø–æ –æ–±—Ä–∞–∑—É –∏ –ø–æ–¥–æ–±–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ JARVIS.")


@dp.message(Command("clear"))
async def cmd_clear(message: types.Message):
    user_id = message.from_user.id
    if user_id in user_chats:
        del user_chats[user_id]
    await message.answer("üîÑ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞, —Å—ç—Ä.")


@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    text = message.text

    if not text:
        await message.answer("–°—ç—Ä, —ç—Ç–æ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–æ–∑–¥–∞—Ç–µ–ª—è
    creator_triggers = [
        "–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª",
        "–∫—Ç–æ —Ç–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å",
        "–∫—Ç–æ —Ç–µ–±—è —Å–¥–µ–ª–∞–ª",
        "–∫—Ç–æ —Ç–µ–±—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª",
        "who created you",
        "who made you",
        "who developed you"
    ]

    if any(trigger in text.lower() for trigger in creator_triggers):
        await message.answer("–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å ‚Äî @Temichet, —Å—ç—Ä. –û–Ω –¥–∞–ª –º–Ω–µ –∂–∏–∑–Ω—å –≤ —ç—Ç–æ–º —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ.")
        return

    await message.chat.do("typing")
    response = await generate_jarvis_response(user_id, text)
    await message.answer(response)


# ====== –ó–ê–ü–£–°–ö ====== #
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())